name: Release ModMaster

description: Builds minecraft mod with ModMaster plugin and release it

inputs:
  java-version:
    description: "Java version to use"
    required: false
    default: "22"
  maven-pass:
    description: "Passkey for the maven repository"
    required: true
  curseforge-token:
    description: "Token for the CurseForge upload"
    required: true
  modrinth-token:
    description: "Token for Modrinth CurseForge upload"
    required: true
  webhook:
    description: "Webhook to notify with the release changelog"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: "temurin"

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Extract Artifact Data
      shell: bash
      run: |
        cat $GITHUB_WORKSPACE/gradle.properties | grep ^artifact_type= >> $GITHUB_ENV
        cat $GITHUB_WORKSPACE/gradle.properties | grep ^archives_base_name= >> $GITHUB_ENV
        cat $GITHUB_WORKSPACE/gradle.properties | grep ^mod_version= >> $GITHUB_ENV
        cat $GITHUB_WORKSPACE/gradle.properties | grep ^archives_base_name= >> $GITHUB_ENV
        cat $GITHUB_WORKSPACE/gradle.properties | grep ^mod_version= >> $GITHUB_ENV

    - name: Build + Release via Gradle
      shell: bash
      run: ./gradlew check build release
      env:
        MAVEN_PASS: ${{ inputs.maven-pass }}
        CURSEFORGE_TOKEN: ${{ inputs.curseforge-token }}
        MODRINTH_TOKEN: ${{ inputs.modrinth-token }}
        DISCORD_WEB_HOOK: ${{ inputs.webhook }}

    - uses: actions/upload-artifact@v4
      with:
        name: "${{ env.archives_base_name }}-${{ env.mod_version }}"
        path: |
          build/**/**/libs/
          !build/*/libs/
          !build/**/craftedcore/libs/
          !build/libs/
          !**/*-dev.jar
          !**/*-shadow.jar
          !**/*-transformProduction*.jar
          !**/testmod*/

    - name: Create GitHub Release
      if: env.artifact_type == 'release'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "${{ env.mod_version }}"
        files: |
          build/${{ env.archives_base_name }}-${{ env.mod_version }}.zip
        body_path: ${{ github.workspace }}/extracted.CHANGELOG.md
